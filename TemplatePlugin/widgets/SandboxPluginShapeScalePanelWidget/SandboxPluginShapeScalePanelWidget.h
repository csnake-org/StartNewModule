/*
* Copyright (c) 2009,
* Computational Image and Simulation Technologies in Biomedicine (CISTIB),
* Universitat Pompeu Fabra (UPF), Barcelona, Spain. All rights reserved.
* See license.txt file for details.
*/

#ifndef _SandboxPluginShapeScalePanelWidget_H
#define _SandboxPluginShapeScalePanelWidget_H

#include "SandboxPluginShapeScaleProcessor.h"
#include "SandboxPluginShapeScalePanelWidgetUI.h"

// CoreLib
#include "coreRenderingTree.h"

// GuiBridgeLib
#include "gblWxConnectorOfWidgetChangesToSlotFunction.h"

namespace Core{ namespace Widgets {
	class AcquireDataEntityInputControl;
	class UserHelper;
	class DataEntityListBrowser;
}}

namespace SandboxPlugin{

/**
PanelWidget for interacting with SandboxPlugin::ShapeScaleProcessor.

The parent class SandboxPluginShapeScalePanelWidgetUI contains all the code for 
buttons, labels, layouts, etc.

The ShapeScalePanelWidget provides the functions that handle the GUI events 
generated by SandboxPluginShapeScalePanelWidgetUI (see for example the function 
OnBtnScale).

SandboxPluginShapeScalePanelWidgetUI is created with wxGlade, a graphical 
GUI editor. It is encouraged to use wxGlade for designing your widgets.

\note In Gimias there's several PanelWidgets for different processors in 
different plugins. All the panel widgets are disabled except the active one that will be 
enabled ( Enable() ). The active one is the one that the user clicked.
If you need to catch the event when this panel widget is enabled or disabled
overwrite the function Enable( ). Be carefull when you call Enable( true ) to 
this widget because the behaviour will be unpredicted.

\ingroup SandboxPlugin
\author Jakub Lyko
\date 22 jun 2008
*/
class ShapeScalePanelWidget : public SandboxPluginShapeScalePanelWidgetUI
{

// OPERATIONS
public:
	//!
	ShapeScalePanelWidget(wxWindow* parent, int id);

	//!
	~ShapeScalePanelWidget( );

	//! Add button events to the bridge and call UpdateWidget()
	void Init(	
		ShapeScaleProcessor::Pointer processor,
		Core::RenderingTree::Pointer tree,
		Core::Widgets::DataEntityListBrowser* listBrowser,
		Core::Widgets::UserHelper *helperWidget );

	//!
	bool Enable( bool enable /*= true */ );

private:
	DECLARE_EVENT_TABLE()

	//! Update GUI from working data
	void UpdateWidget();

	//! Update working data from GUI
	void UpdateData();

	//! Validate GUI data
	bool Validate();

	//! Button has been pressed
	void OnBtnScale(wxCommandEvent& event);

	//!
	void OnModifiedInputDataEntity( );

	//!
	void OnModifiedOutputDataEntity();

	//!
	void UpdateHelperWidget( );

// ATTRIBUTES
private:
	//! Working data of the processor
	ShapeScaleProcessor::Pointer m_Processor;

	//! Each time a text control is modified, UpdateData( ) will be called
	gbl::wx::ConnectorOfWidgetChangesToSlotFunction m_changeInWidgetObserver;

	//! Rendering tree
	Core::RenderingTree::Pointer m_RenderingTree;

	//! Widget 
	Core::Widgets::AcquireDataEntityInputControl* m_AcquireInputWidget;

	//! User helper
	Core::Widgets::UserHelper *m_helperWidget;
};

} //namespace SandboxPlugin{

#endif //_SandboxPluginShapeScalePanelWidget_H
